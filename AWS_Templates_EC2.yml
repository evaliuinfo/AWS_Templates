---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template Sample template EIP_With_Association, This
  template shows how to associate an Elastic IP address with an Amazon EC2
  instance - you can use this same technique to associate an EC2 instance with
  an Elastic IP Address that is not created inside the template by replacing the
  EIP reference in the AWS::EC2::EIPAssoication resource type with the IP
  address of the external EIP.

Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  RootVolumeType:
    Description: The root volume type.
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - standard
  RootVolumeSize:
    Description: The root volume size. The volume range for gp2 and gp3 is 1-16384, 
      for io1 and io2 is 4-16,384, and for standard is 1-1,024
    Type: String
    Default: 20
  EBSVolumeType:
    Description: The EBS volume type.
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - standard
  EBSVolumeSize:
    Description: The EBS volume size. The volume range for gp2 and gp3 is 1-16384, 
      for io1 and io2 is 4-16,384, and for standard is 1-1,024
    Type: String
    Default: 40
  SubnetId:
    Description: EC2 instance subnet ID
    Type: String
    ConstraintDescription: must be the name of an existing VPC Subnets.
  SecurityGroupsId:
    Description: Security Groups ID lists, can be the max of 4 IDs, combined with comma. 
      eg "sg-xxxxxx,sg-xxxxxx,sg-xxxxxx,sg-xxxxxx"
    Type: String
    ConstraintDescription: must be the list of IDs belonging to current Security Groups.
    Default: 'NONE,NONE,NONE,NONE'
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  IamInstanceProfile:
    Description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
    Type: String
  InstanceInitiatedShutdownBehavior:
    Description: Indicates whether an instance stops or terminates when you initiate shutdown 
      from the instance (using the operating system command for system shutdown).
    Type: String
    Default: stop
    AllowedValues: 
      - stop
      - terminate
    ConstraintDescription: must be one of the allowed values.

Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-032930428bf1abbff
      HVMG2: ami-0aeb704d503081ea6
    us-east-2:
      HVM64: ami-027cab9a7bf0155df
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-088c153f74339f34c
      HVMG2: ami-0a7fc72dc0e51aa77
    us-west-2:
      HVM64: ami-01fee56b22f308154
      HVMG2: ami-0fe84a5b4563d8f27

Conditions:
  UseDefaultSecurityGroups: !Equals
    - !Select [ 0, !Split [',', !Ref SecurityGroupsId]]
    - 'NONE'
  UseProvidedSecurityGroups: !Not 
    - !Equals
      - !Select [ 0, !Split [',', !Ref SecurityGroupsId]]
      - 'NONE'
  UseSecondSecurityGroups: !Not
    - !Equals
      - !Select [ 1, !Split [',', !Ref SecurityGroupsId]]
      - 'NONE'
  UseThirdSecurityGroups: !Not
    - !Equals
      - !Select [ 2, !Split [',', !Ref SecurityGroupsId]]
      - 'NONE'
  UseFourthSecurityGroups: !Not
    - !Equals
      - !Select [ 3, !Split [',', !Ref SecurityGroupsId]]
      - 'NONE'

Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - IPAddress=
            - '0.0.0.0/0'
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: !Ref RootVolumeType
            VolumeSize: !Ref RootVolumeSize
            DeleteOnTermination: false
            Encrypted: true
        - DeviceName: /dev/xvdf
          Ebs:
            VolumeType: !Ref EBSVolumeType
            VolumeSize: !Ref EBSVolumeSize
            DeleteOnTermination: false
            Encrypted: true
      SecurityGroupIds: 
        - !If 
          - UseProvidedSecurityGroups
          - !Select [ 0, !Split [',', !Ref SecurityGroupsId]]
          - !Ref "AWS::NoValue"
        - !If
          - UseSecondSecurityGroups
          - !Select [ 1, !Split [',', !Ref SecurityGroupsId]]
          - !Ref "AWS::NoValue"
        - !If
          - UseThirdSecurityGroups
          - !Select [ 2, !Split [',', !Ref SecurityGroupsId]]
          - !Ref "AWS::NoValue"
        - !If
          - UseFourthSecurityGroups
          - !Select [ 3, !Split [',', !Ref SecurityGroupsId]]
          - !Ref "AWS::NoValue"
      SecurityGroups: 
        - !If
          - UseProvidedSecurityGroups
          - !Ref "AWS::NoValue"
          - !Ref InstanceSecurityGroup
      SubnetId: !Ref SubnetId
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      IamInstanceProfile: !Ref IamInstanceProfile
      InstanceInitiatedShutdownBehavior: !Ref InstanceInitiatedShutdownBehavior
      Tags:
        - Key: SERVICE_CREATOR
          Value: eliu
        - Key: SERVICE_CATEGORY
          Value: INFRA
      
  InstanceSecurityGroup:
    Condition: UseDefaultSecurityGroups
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
      Tags:
        - Key: SERVICE_CREATOR
          Value: eliu
        - Key: SERVICE_CATEGORY
          Value: INFRA

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  InstanceSecurityGroups:
    Condition: UseDefaultSecurityGroups
    Description: Security Groups of the newly created EC2 instance
    Value: !Ref InstanceSecurityGroup
